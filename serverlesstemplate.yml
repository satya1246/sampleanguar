AWSTemplateFormatVersion: 2010-09-09
Conditions:
  CreateCodeBuildResources: !Equals
  - true
  - true
  CreateWebSiteS3Bucket: !Equals
  - true
  - true
Description: A ReactJS static website with Cloudfront Distribution.
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Application
      Parameters:
      - ProjectId
  IsWebsite: true
  ProjectTemplateId: reactjs-static-webapp
Parameters:
  CodeS3Bucket:
    Default: 'spg-app-code-bucket' # Bucket name must not contain Upper case letters
    NoEcho: true
    Type: String
  CodeS3Key:
    Default: 'Angular-HelloWorld/*'
    NoEcho: true
    Type: String
  ProjectId:
    AllowedPattern: ^[a-z]([a-z0-9-])+$
    ConstraintDescription: Project IDs must be between 2 and 15 characters, begin with a letter, and only contain lowercase letters, numbers, and hyphens (-).
    Description: Project ID.
    MaxLength: 15
    MinLength: 2
    Type: String
  RepositoryName:
    Description: AWS CodeCommit repository name.
    MaxLength: 100
    MinLength: 1
    Type: String
  DevAccountId:
    Type: String
    Description: The DEV Account ID
    AllowedPattern: "[0-9]+"
    ConstraintDescription: Account ID is a number
    Default: "887931365560"
  ProdAccountId:
    Type: String
    Description: The PROD Account ID
    AllowedPattern: "[0-9]+"
    ConstraintDescription: Account ID is a number
    Default: "862596961827"
Resources:
  CloudFormationTrustRole:
    DeletionPolicy: Retain
    Description: Creating service role in IAM for AWS CloudFormation
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
              - codepipeline.amazonaws.com
              - cloudformation.amazonaws.com
              - s3.amazonaws.com
            AWS:
              - !Sub 'arn:aws:iam::${ProdAccountId}:role/codestar-prod-cross-account-role'
              - !Sub 'arn:aws:iam::${ProdAccountId}:root'
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/CloudFrontFullAccess'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - s3:*
            Effect: Allow
            Resource:
            - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}'
            - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}/*'
          - Action:
            - apigateway:DELETE
            - apigateway:GET
            - apigateway:PATCH
            - apigateway:POST
            - apigateway:PUT
            - apigateway:TagResource
            - codedeploy:CreateApplication
            - codedeploy:CreateDeployment
            - codedeploy:CreateDeploymentConfig
            - codedeploy:CreateDeploymentGroup
            - codedeploy:DeleteApplication
            - codedeploy:DeleteDeployment
            - codedeploy:DeleteDeploymentConfig
            - codedeploy:DeleteDeploymentGroup
            - codedeploy:GetDeployment
            - codedeploy:GetDeploymentConfig
            - codedeploy:GetDeploymentGroup
            - codedeploy:RegisterApplicationRevision
            - codestar:SyncResources
            - config:DeleteConfigRule
            - config:DescribeConfigRules
            - config:ListTagsForResource
            - config:PutConfigRule
            - config:TagResource
            - config:UntagResource
            - cloudfront:CreateCloudFrontOriginAccessIdentity
            - cloudfront:CreateDistribution
            - cloudfront:TagResource
            - cloudfront:GetDistribution
            - cloudfront:UpdateDistribution
            - events:DeleteRule
            - events:DescribeRule
            - events:ListTagsForResource
            - events:PutRule
            - events:PutTargets
            - events:RemoveTargets
            - events:TagResource
            - events:UntagResource
            - lambda:CreateAlias
            - lambda:CreateFunction
            - lambda:DeleteAlias
            - lambda:DeleteFunction
            - lambda:DeleteFunctionConcurrency
            - lambda:GetAlias
            - lambda:GetFunction
            - lambda:GetFunctionConfiguration
            - lambda:ListTags
            - lambda:ListVersionsByFunction
            - lambda:PublishVersion
            - lambda:PutFunctionConcurrency
            - lambda:TagResource
            - lambda:UntagResource
            - lambda:UpdateAlias
            - lambda:UpdateFunctionCode
            - lambda:UpdateFunctionConfiguration
            - s3:*
            Effect: Allow
            Resource: '*'
          - Action:
            - iam:PassRole
            Effect: Allow
            Resource:
            - !GetAtt
              - CodeDeployTrustRole
              - Arn
          - Action:
            - cloudformation:CreateChangeSet
            Effect: Allow
            Resource:
            - !Sub 'arn:${AWS::Partition}:cloudformation:${AWS::Region}:aws:transform/Serverless-2016-10-31'
          - Action:
            - iam:CreateServiceLinkedRole
            - iam:GetRole
            - iam:DeleteRole
            - iam:DeleteUser
            Effect: Allow
            Resource: '*'
          - Action:
            - iam:PassRole
            Effect: Allow
            Resource: '*'
          - Action:
            - iam:AttachRolePolicy
            - iam:AttachUserPolicy
            - iam:CreateRole
            - iam:CreateUser
            - iam:DeleteRolePolicy
            - iam:DeleteUserPolicy
            - iam:DetachUserPolicy
            - iam:DetachRolePolicy
            - iam:PutUserPermissionsBoundary
            - iam:PutRolePermissionsBoundary
            Condition:
              StringEquals:
                iam:PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/CodeStar_${ProjectId}_PermissionsBoundary'
            Effect: Allow
            Resource: '*'
          - Action:
            - kms:CreateKey
            - kms:CreateAlias
            - kms:DeleteAlias
            - kms:DisableKey
            - kms:EnableKey
            - kms:UpdateAlias
            - kms:TagResource
            - kms:UntagResource
            - kms:DescribeKey
            - kms:GenerateDataKey*
            - kms:Encrypt
            - kms:ReEncrypt*
            - kms:Decrypt
            Effect: Allow
            Resource: '*'
          - Action:
            - ssm:GetParameter*
            Condition:
              StringEquals:
                ssm:ResourceTag/awscodestar:projectArn: !Sub 'arn:${AWS::Partition}:codestar:${AWS::Region}:${AWS::AccountId}:project/${ProjectId}'
            Effect: Allow
            Resource: '*'
        PolicyName: CodeStarWorkerCloudFormationRolePolicy
      RoleName: !Join
      - '-'
      - - CodeStarWorker
        - !Ref 'ProjectId'
        - CloudFormation
      Tags:
        - Value: !Join 
            - '-'
            - - !Ref ProjectId
              - S3Bucket
          Key: !Sub >-
            arn:${AWS::Partition}:codestar:${AWS::Region}:${AWS::AccountId}:project/${ProjectId}
    Type: AWS::IAM::Role
  CodeBuildProject:
    Condition: CreateCodeBuildResources
    DependsOn:
    - ToolChainRole
    Properties:
      Artifacts:
        Packaging: zip
        Type: codepipeline
      Description: !Join
      - ''
      - - 'AWS CodeStar created CodeBuild Project for '
        - !Ref 'ProjectId'
      Environment:
        ComputeType: small
        EnvironmentVariables:
        - Name: STAGE
          Value: ''
        - Name: S3_BUCKET
          Value: !Ref 'S3Bucket'
        - Name: PROJECT_ID
          Value: !Ref 'ProjectId'
        - Name: ACCOUNT_ID
          Value: !Ref 'AWS::AccountId'
        - Name: PARTITION
          Value: !Ref 'AWS::Partition'          
        Image: aws/codebuild/standard:5.0-21.10.15
        Type: LINUX_CONTAINER
      Name: !Ref 'ProjectId'
      ServiceRole: !Ref 'ToolChainRole'
      Source:
        Type: codepipeline
        BuildSpec: buildspec.yml
    Type: AWS::CodeBuild::Project
  CodeCommitRepo:
    Description: Creating AWS CodeCommit repository for application source code
    Properties:
      Code:
        BranchName: master
        S3:
          Bucket: !Ref 'CodeS3Bucket'
          Key: !Ref 'CodeS3Key'
      RepositoryDescription: !Join
      - ''
      - - !Ref 'ProjectId'
        - ' project repository'
      RepositoryName: !Ref 'RepositoryName'
    Type: AWS::CodeCommit::Repository
  CodeDeployTrustRole:
    DeletionPolicy: Retain
    Description: The service role to be created in IAM for AWS CodeDeploy
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
              - codedeploy.amazonaws.com
              - codepipeline.amazonaws.com
              - s3.amazonaws.com
            AWS:
              - !Sub 'arn:aws:iam::${ProdAccountId}:role/codestar-prod-cross-account-role'
              - !Sub 'arn:aws:iam::${ProdAccountId}:root'
      Path: /
      RoleName: !Sub 'CodeStarWorker-${ProjectId}-CodeDeploy'
      Tags:
        - Value: !Join 
            - '-'
            - - !Ref ProjectId
              - S3Bucket
          Key: !Sub >-
            arn:${AWS::Partition}:codestar:${AWS::Region}:${AWS::AccountId}:project/${ProjectId}
    Type: AWS::IAM::Role
  ProjectPipeline:
    DependsOn:
    - ToolChainRole
    - S3Bucket
    - CodeBuildProject
    - CloudFormationTrustRole
    - CrossAccountKeyPolicy
    - CrossAcountPolicy
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    Properties:
      ArtifactStore:
        Location: !Ref 'S3Bucket'
        Type: S3
        EncryptionKey:
          Id: arn:aws:kms:us-east-1:887931365560:key/abde05e3-02da-42e0-bb57-987fc1ce8500
          Type: KMS
      Name: !Sub '${ProjectId}-Pipeline'
      RoleArn: !GetAtt
      - ToolChainRole
      - Arn
      Stages:
        - Name: Source
          Actions:
            - Name: ApplicationSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Version: 1
                Provider: CodeCommit
              Configuration:
                PollForSourceChanges: false
                RepositoryName: !Ref 'RepositoryName'
                BranchName: master
              OutputArtifacts:
                - Name: !Sub '${ProjectId}-SourceArtifact' 
              RunOrder: 1
        - Name: BuildDev
          Actions:
            - Name: PackageExportDev
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref 'ProjectId'
                EnvironmentVariables: !Sub '[{"name":"STAGE","value":"Dev","type":"PLAINTEXT"}]'
              InputArtifacts:
                - Name: !Sub '${ProjectId}-SourceArtifact'
              OutputArtifacts:
                - Name: !Sub '${ProjectId}-BuildArtifactDev'
              RunOrder: 2
        - Name: DeployDev
          Actions:
            - Name: GenerateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: pipeline-changeset-dev
                ParameterOverrides: !Sub '{"ProjectId":"${ProjectId}", "CodeDeployRole":"${CodeDeployTrustRole.Arn}", "Stage":"dev", "ProdAccountId": "${ProdAccountId}", "DevAccountId": "${DevAccountId}"}'
                RoleArn: !GetAtt
                - CloudFormationTrustRole
                - Arn
                StackName: !Sub 'awscodestar-${ProjectId}-infrastructure-dev'
                TemplateConfiguration: !Sub '${ProjectId}-BuildArtifactDev::template-configuration.json'
                TemplatePath: !Sub '${ProjectId}-BuildArtifactDev::template-export.yml'
              InputArtifacts:
                - Name: !Sub '${ProjectId}-BuildArtifactDev'
              OutputArtifacts: [
                ]
              RunOrder: 3
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: pipeline-changeset-dev
                StackName: !Sub 'awscodestar-${ProjectId}-infrastructure-dev'
              InputArtifacts: [
                ]
              OutputArtifacts: [
                ]
              RunOrder: 4
            - Name: DeployToS3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              RunOrder: 5
              Configuration:
                BucketName: !Sub 'aws-dev-${AWS::Region}-${AWS::AccountId}-${ProjectId}-app'
                CannedACL: bucket-owner-full-control
                Extract: 'true'
              OutputArtifacts: []
              InputArtifacts:
                - Name: !Sub ${ProjectId}-BuildArtifactDev
              Region: !Ref 'AWS::Region'
        - Name: BuildQa
          Actions:
            - Name: PackageExportQa
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref 'ProjectId'
                EnvironmentVariables: !Sub '[{"name":"STAGE","value":"Qa","type":"PLAINTEXT"}]'
              InputArtifacts:
                - Name: !Sub '${ProjectId}-SourceArtifact'
              OutputArtifacts:
                - Name: !Sub '${ProjectId}-BuildArtifactQa'
              RunOrder: 7
        - Name: DeployQA
          Actions:
            - Name: GenerateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: pipeline-changeset-qa
                ParameterOverrides: !Sub '{"ProjectId":"${ProjectId}", "CodeDeployRole":"${CodeDeployTrustRole.Arn}", "Stage": "qa", "ProdAccountId": "${ProdAccountId}", "DevAccountId": "${DevAccountId}"}'
                RoleArn: !GetAtt
                - CloudFormationTrustRole
                - Arn
                StackName: !Sub 'awscodestar-${ProjectId}-infrastructure-qa'
                TemplateConfiguration: !Sub '${ProjectId}-BuildArtifactQa::template-configuration.json'
                TemplatePath: !Sub '${ProjectId}-BuildArtifactQa::template-export.yml'
              InputArtifacts:
                - Name: !Sub '${ProjectId}-BuildArtifactQa'
              OutputArtifacts: [
                ]
              RunOrder: 8
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: pipeline-changeset-qa
                StackName: !Sub 'awscodestar-${ProjectId}-infrastructure-qa'
              InputArtifacts: [
                ]
              OutputArtifacts: [
                ]
              RunOrder: 9
            - Name: DeployToS3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              RunOrder: 10
              Configuration:
                BucketName: !Sub 'aws-qa-${AWS::Region}-${AWS::AccountId}-${ProjectId}-app'
                CannedACL: bucket-owner-full-control
                Extract: 'true'
              OutputArtifacts: []
              InputArtifacts:
                - Name: !Sub '${ProjectId}-BuildArtifactQa'
              Region: !Ref 'AWS::Region'
        - Name: BuildProd
          Actions:
            - Name: PackageExportProd
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref 'ProjectId'
                EnvironmentVariables: !Sub '[{"name":"STAGE","value":"Prod","type":"PLAINTEXT"}]'
              InputArtifacts:
                - Name: !Sub '${ProjectId}-SourceArtifact'
              OutputArtifacts:
                - Name: !Sub '${ProjectId}-BuildArtifactProd'
              RunOrder: 12
        - Name: DeployProd
          Actions:
            - Name: GenerateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: '1'
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                Capabilities: CAPABILITY_NAMED_IAM
                ChangeSetName: pipeline-changeset-prod
                ParameterOverrides: !Sub '{"ProjectId":"${ProjectId}", "CodeDeployRole":"arn:aws:iam::${ProdAccountId}:role/codestar-prod-cross-service-role", "Stage": "prod", "ProdAccountId": "${ProdAccountId}", "DevAccountId": "${DevAccountId}"}'
                RoleArn: !Sub "arn:aws:iam::${ProdAccountId}:role/codestar-prod-cross-service-role"
                StackName: !Sub 'awscodestar-${ProjectId}-infrastructure-prod'
                TemplateConfiguration: !Sub '${ProjectId}-BuildArtifactProd::template-configuration.json'
                TemplatePath: !Sub '${ProjectId}-BuildArtifactProd::template-export.yml'
              InputArtifacts:
                - Name: !Sub '${ProjectId}-BuildArtifactProd'
              OutputArtifacts: [
                ]
              RoleArn: !Sub 'arn:aws:iam::${ProdAccountId}:role/codestar-prod-cross-account-role'
              RunOrder: 13
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                ChangeSetName: pipeline-changeset-prod
                StackName: !Sub 'awscodestar-${ProjectId}-infrastructure-prod'
                RoleArn: !Sub "arn:aws:iam::${ProdAccountId}:role/codestar-prod-cross-service-role"
              InputArtifacts: [
                ]
              OutputArtifacts: [
                ]
              RoleArn: !Sub 'arn:aws:iam::${ProdAccountId}:role/codestar-prod-cross-account-role'
              RunOrder: 14
            - Name: DeployToS3
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: '1'
              RunOrder: 15
              Configuration:
                BucketName: !Sub 'aws-prod-${AWS::Region}-${ProdAccountId}-${ProjectId}-app'
                CannedACL: bucket-owner-full-control
                Extract: 'true'
              OutputArtifacts: []
              RoleArn: !Sub 'arn:aws:iam::${ProdAccountId}:role/codestar-prod-cross-account-role'
              InputArtifacts:
                - Name: !Sub '${ProjectId}-BuildArtifactProd'
              Region: !Ref 'AWS::Region'
    Type: AWS::CodePipeline::Pipeline
  S3ArtifactBucketPolicy:
    Description: Setting Amazon S3 bucket policy for AWS CodePipeline access
    Properties:
      Bucket: !Ref 'S3Bucket'
      PolicyDocument:
        Id: SSEAndSSLPolicy
        Statement:
        - Action:
          - s3:*
          Effect: Allow
          Principal:
            AWS: 
              - !Sub 'arn:aws:iam::${ProdAccountId}:root'
              - !Sub 'arn:aws:iam::${DevAccountId}:root'
          Resource:
          - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}'
          - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}/*'
        Version: 2012-10-17
    Type: AWS::S3::BucketPolicy
  S3Bucket:
    DeletionPolicy: Retain
    Description: Creating Amazon S3 bucket for AWS CodePipeline artifacts
    Properties:
      BucketName: !Join
      - '-'
      - - aws
        - codestar
        - !Ref 'AWS::Region'
        - !Ref 'AWS::AccountId'
        - !Ref 'ProjectId'
        - pipe
      Tags:
      - Key: Name
        Value: !Join
        - '-'
        - - !Ref 'ProjectId'
          - S3Bucket
      VersioningConfiguration:
        Status: Enabled
    Type: AWS::S3::Bucket
  SourceEvent:
    Type: 'AWS::Events::Rule'
    Properties:
      EventPattern:
        detail-type:
          - CodeCommit Repository State Change
        resources:
          - !GetAtt 
            - CodeCommitRepo
            - Arn
        detail:
          referenceType:
            - branch
          event:
            - referenceCreated
            - referenceUpdated
          referenceName:
            - master
        source:
          - aws.codecommit
      Description: >-
        Rule for Amazon CloudWatch Events to detect changes to the source
        repository and trigger pipeline execution
      State: ENABLED
      Targets:
        - Id: ProjectPipelineTarget
          Arn: !Sub >-
            arn:${AWS::Partition}:codepipeline:${AWS::Region}:${AWS::AccountId}:${ProjectId}-Pipeline
          RoleArn: !GetAtt 
            - ToolChainRole
            - Arn
      Name: !Join 
        - '-'
        - - awscodestar
          - !Ref ProjectId
          - SourceEvent
  # Pipeline role
  ToolChainRole:
    DeletionPolicy: Retain
    Description: Creating toolchain role in IAM for Amazon EC2 instances
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action: sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
              - codebuild.amazonaws.com
              - codedeploy.amazonaws.com
              - codepipeline.amazonaws.com
              - codestar.amazonaws.com
              - elasticbeanstalk.amazonaws.com
              - events.amazonaws.com
              - lambda.amazonaws.com
              - cloudformation.amazonaws.com
              - s3.amazonaws.com
            AWS:
              - !Sub 'arn:aws:iam::${ProdAccountId}:role/codestar-prod-cross-account-role'
              - !Sub 'arn:aws:iam::${ProdAccountId}:root'
      ManagedPolicyArns:
      - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeCommitFullAccess'
      - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeBuildAdminAccess'
      - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeDeployFullAccess'
      - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodePipeline_FullAccess'
      - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess-AWSElasticBeanstalk'
      - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSLambda_FullAccess'
      - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AWSCodeStarFullAccess'
      - !Sub 'arn:${AWS::Partition}:iam::aws:policy/CloudWatchEventsFullAccess'
      - !Sub 'arn:${AWS::Partition}:iam::aws:policy/AmazonS3FullAccess'
      Path: /
      Policies:
      - PolicyDocument:
          Statement:
          - Action:
            - kms:DescribeKey
            - kms:GenerateDataKey*
            - kms:Encrypt
            - kms:ReEncrypt*
            - kms:Decrypt
            Effect: Allow
            Resource: '*'
          - Action:
            - s3:*
            Effect: Allow
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}'
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}/*'
          - Action: "cloudformation:*"
            Resource: "*"
            Effect: Allow
          - Action: "codecommit:*"
            Resource: "*"
            Effect: Allow
          - Action: "codedeploy:*"
            Resource: "*"
            Effect: Allow
          - Action: "apigateway:*"
            Resource: "*"
            Effect: Allow
          - Action: "lambda:*"
            Resource: "*"
            Effect: Allow
          - Action: 
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DeleteLogGroup
            - logs:DescribeLogGroups
            - logs:PutRetentionPolicy
            Resource: "arn:aws:logs:*:*:*"
            Effect: Allow
          - Action: 
              - s3:*
            Resource:
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}'
              - !Sub 'arn:${AWS::Partition}:s3:::${S3Bucket}/*'
            Effect: Allow
          - Action:
              - iam:*
            Resource: "*"
            Effect: Allow
          - Action:
              - codebuild:*
            Resource:  "*"
            Effect: Allow 
        PolicyName: ToolChainWorkerPolicy
      RoleName: !Sub 'CodeStarWorker-${ProjectId}-ToolChain'
    Type: AWS::IAM::Role
  CrossAccountKeyPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Join 
        - '-'
        - - aws
          - codestar
          - !Ref 'AWS::Region'
          - !Ref 'AWS::AccountId'
          - !Ref ProjectId
          - '-prod-crossaccount-keypol'
      Roles:
        - !Ref ToolChainRole
        - !Ref CloudFormationTrustRole
        - !Ref CodeDeployTrustRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 
            - kms:DescribeKey
            - kms:GenerateDataKey*
            - kms:Encrypt
            - kms:ReEncrypt*
            - kms:Decrypt
            Resource: 
            - arn:aws:kms:us-east-1:887931365560:key/abde05e3-02da-42e0-bb57-987fc1ce8500
  CrossAcountPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: !Join 
        - '-'
        - - aws
          - codestar
          - !Ref 'AWS::Region'
          - !Ref 'AWS::AccountId'
          - !Ref ProjectId
          - '-XAcctPol'
      Roles:
        - !Ref ToolChainRole
        - !Ref CloudFormationTrustRole
        - !Ref CodeDeployTrustRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 
              - sts:*
            Resource: 
              - !Sub 'arn:aws:iam::${ProdAccountId}:role/*'
              - !Sub 'arn:aws:iam::${ProdAccountId}:role/codestar-prod-cross-account-role'
Outputs:
  CloudFormationTrustRole:
    Description: Creating service role in IAM for AWS CloudFormation
    Value: !GetAtt CloudFormationTrustRole.Arn
  CodeCommitRepo:
    Description: Creating AWS CodeCommit repository for application source code
    Value: !GetAtt CodeCommitRepo.Name
  CodeDeployTrustRole:
    Description: The service role to be created in IAM for AWS CodeDeploy
    Value: !GetAtt CodeDeployTrustRole.Arn
  ToolChainRole:
    Description: Creating toolchain role in IAM for Amazon EC2 instances
    Value: !GetAtt ToolChainRole.Arn
  ProjectPipeline:
    Description: Creating a deployment pipeline for your project in AWS CodePipeline
    Value: !Ref ProjectPipeline
  S3Bucket:
    Description: Creating Amazon S3 bucket for AWS CodePipeline artifacts
    Value: !Ref S3Bucket